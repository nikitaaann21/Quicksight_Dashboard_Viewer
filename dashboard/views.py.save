from django.shortcuts import render
import boto3
from botocore.exceptions import NoCredentialsError


def dashboard_view(request):
    # Initialize Boto3 client for QuickSight
    client = boto3.client('quicksight', region_name='ap-southeast-2')

    # Retrieve the dashboard embed URL and pass it to the template
    try:
        response = client.generate_embed_url_for_anonymous_user(
            AwsAccountId='233425133219',
            DashboardId='417175f2-cfb7-4feb-a21c-b9ae0723f6f3',
            IdentityType='IAM'
        )
        embed_url = response['EmbedUrl']
    except NoCredentialsError:
        # Handle error when AWS credentials are missing
        embed_url = None

    return render(request, 'dashboard.html', {'embed_url': embed_url})




import json
import boto3
from botocore.exceptions import ClientError
import time

# Create QuickSight and STS clients
qs = boto3.client('quicksight',region_name='us-east-1')
sts = boto3.client('sts')

# Function to generate embedded URL for anonymous user
# accountId: YOUR AWS ACCOUNT ID
# quicksightNamespace: VALID NAMESPACE WHERE YOU WANT TO DO NOAUTH EMBEDDING
# authorizedResourceArns: DASHBOARD ARN LIST TO EMBED
# experienceConfiguration: DASHBOARD ID TO WHICH THE CONSTRUCTED URL POINTS
# sessionTags: SESSION TAGS USED FOR ROW-LEVEL SECURITY
def generateEmbedUrlForAnonymousUser(accountId, quicksightNamespace, authorizedResourceArns, experienceConfiguration, sessionTags):
    try:
        response = generate_embed_url_for_anonymous_user(
            "AwsAccountId" = accountId,
            "Namespace" = quicksightNamespace,
            "AuthorizedResourceArns" = authorizedResourceArns,
            "ExperienceConfiguration" = experienceConfiguration,
            "SessionTags" = sessionTags,
            "SessionLifetimeInMinutes" = 600
        )

        return {
            'statusCode': 200,
            'headers': {"Access-Control-Allow-Origin": "*", "Access-Control-Allow-Headers": "Content-Type"},
            'body': json.dumps(response),
            'isBase64Encoded':  bool('false')
        }
    except ClientError as e:
        print(e)
        return "Error generating embeddedURL: " + str(e)

